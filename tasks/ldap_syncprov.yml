---
- name: Set short name for ldap_overlays.ldap_syncprov.overlay
  ansible.builtin.set_fact:
    lspo: "{{ ldap_overlays.ldap_syncprov.overlay }}"
  tags: ldap_setup_syncprov,ldap_config_syncprov

### BEGIN: Copy DIT from {{ common_primary_dc }} to other hosts
# get DIT into variable. There is on {{ common_primary_dc }}
- name: Get LDAP DIT from common_primary_dc
  ansible.builtin.command: slapcat
  register: ldap_dit
  changed_when: false
  check_mode: false
  tags: ldap_setup_syncprov
  when: common_full_hostname == common_primary_dc

- name: Copy ldap_dit to controller as file
  ansible.builtin.copy:
    dest: "/tmp/DIT_data.ldif"
    content: "{{ ldap_dit.stdout }}"
    mode: "0644"
  tags: ldap_setup_syncprov
  when: common_full_hostname == common_primary_dc
  delegate_to: 127.0.0.1

# Every follow task run on other hosts.
- name: Create LDIF for upload on other hosts
  ansible.builtin.copy:
    dest: "/tmp/DIT_data.ldif"
    src: "/tmp/DIT_data.ldif"
    mode: "0644"
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc

- name: Delete /tmp/DIT_data.ldif on local host
  ansible.builtin.file:
    path: "/tmp/DIT_data.ldif"
    state: absent
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc
  delegate_to: 127.0.0.1

- name: Stop slapd on other hosts
  ansible.builtin.service:
    name: slapd
    state: stopped
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc

- name: Delete old data on replica
  ansible.builtin.file:
    path: "{{ ldap_db_directory }}"
    state: absent
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc

- name: Create ldap_db_directory on replica
  ansible.builtin.file:
    path: "{{ ldap_db_directory }}"
    state: directory
    owner: "{{ ldap_system_user }}"
    group: "{{ ldap_system_group }}"
    mode: "0700"
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc

- name: Upload LDIF on others hosts
  ansible.builtin.command: slapadd -l /tmp/DIT_data.ldif -w
  changed_when: true
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc

- name: Delete /tmp/DIT_data.ldif on remote host
  ansible.builtin.file:
    path: "/tmp/DIT_data.ldif"
    state: absent
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc

- name: Set right ACLs on LDAP db dir
  ansible.builtin.file:
    path: "{{ ldap_db_directory }}"
    state: directory
    owner: "{{ ldap_system_user }}"
    group: "{{ ldap_system_group }}"
    mode: "0700"
    recurse: true
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc

- name: Start slapd on other hosts
  ansible.builtin.service:
    name: slapd
    state: started
  tags: ldap_setup_syncprov
  when: common_full_hostname != common_primary_dc
### END: Copy DIT from {{ common_primary_dc }} to other hosts

- name: Get info about syncprov overlay
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      ldapsearch -Y EXTERNAL -H ldapi:/// -b '{{ ldap_db_dn }}' \
      '(olcOverlay=syncprov)' 2>&1 | grep "olcOverlay:.*syncprov" && echo "YES" || echo "NO"
    executable: /usr/bin/bash
  changed_when: false
  register: syncprov_exists
  check_mode: false
  tags: ldap_setup_syncprov,ldap_config_syncprov

- name: Add entry of syncprov overlay into LDAP
  community.general.ldap_entry:
    dn: "{{ lspo.dn }}"
    objectClass:
      - "olcOverlayConfig"
      - "olcSyncProvConfig"
    attributes:
      olcOverlay: "syncprov"
      olcSpCheckPoint: "{{ lspo.attrs.olcspcheckpoint }}"
      olcSpNoPresent: "{{ lspo.attrs.olcspnopresent | default(omit) }}"
      olcSpReloadHint: "{{ lspo.attrs.olcspreloadhint | default(omit) }}"
      olcSpSessionlog: "{{ lspo.attrs.olcspsessionlog | default(omit) }}"
  tags: ldap_setup_syncprov,ldap_config_syncprov
  when: syncprov_exists.stdout == "NO"

- name: Add ServerID into cn=config
  community.general.ldap_attrs:
    dn: "cn=config"
    attributes:
      olcServerID: "{{ ldap_serverid }}"
  tags: ldap_setup_syncprov,ldap_config_syncprov

- name: Get OlcSyncRepls
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      ldapsearch -Y EXTERNAL -H ldapi:///  \
      -b 'olcDatabase={1}mdb,cn=config' '(olcSyncrepl=*)' 2>&1 \
      | perl -MMIME::Base64 -n -00 -e 's/\n +//g;s/(?<=:: )(\S+)/decode_base64($1)/eg;print' \
      | grep ^olcSyncrepl || echo "There is no sync settings"
    executable: /usr/bin/bash
  changed_when: false
  register: syncset_exists
  tags: ldap_setup_syncprov,ldap_config_syncprov

# if there is not list of Syncrepl attr and Syncrepl exist than there is follow error
# failed: [desktop]
#   (item={'ServerID': 1, 'ldap_uri': 'ldaps://srv01.mshurutov.home/'}) =>
#     { "ansible_loop_var": "item",
#       "changed": false,
#       "details":
#         "{ 'msgtype': 103,
#            'msgid': 3,
#            'result': 20,
#            'desc': 'Type or value exists',
#            'ctrls': [],
#            'info': 'modify/add: olcSyncrepl: value #0 already exists'
#         }",
#       "item":
#         { "ServerID": 1,
#           "ldap_uri": "ldaps://srv01.mshurutov.home/"},
#           "msg": "Attribute action failed. "}
- name: Add parameters of sync
  community.general.ldap_attrs:
    dn: "{{ ldap_db_dn }}"
    attributes:
      olcSyncrepl: >
        rid=00{{ prov.serverid }}
        provider={{ prov.ldap_uri }}
        type=refreshAndPersist
        retry="{{ ldap_sync_retry }}"
        searchbase="{{ ldap_base_suffix }}"
        attrs="*,+"
        bindmethod=simple
        binddn="{{ ldap_rootdn }}"
        credentials={{ ldap_root_password }}
  loop: "{{ ldap_nodes }}"
  loop_control:
    loop_var: prov
  when: prov.ldap_uri not in syncset_exists.stdout
  tags: ldap_setup_syncprov,ldap_config_syncprov

# Follow commented block return error:
# fatal: [desktop]: FAILED! =>
# { "changed": false,
#   "details":
#     "{ 'msgtype': 103,
#        'msgid': 3,
#        'result': 21,
#        'desc': 'Invalid syntax',
#        'ctrls': [],
#        'info': 'olcMirrorMode: value #0 invalid per syntax'
#     }", "msg": "Attribute action failed."
# }
# if ldap_mirror_mode is not one from two STRINGS: "TRUE" or "FALSE"
# False, True, true as ansible bool value cause error above
- name: Add olcMultiProvider
  community.general.ldap_attrs:
    dn: "{{ ldap_db_dn }}"
    attributes:
      olcMultiProvider: "{{ ldap_mirror_mode }}"
    state: exact
  when: ldap_version > 2.4
  tags: ldap_setup_syncprov,ldap_config_syncprov

- name: Add MirrorMode
  community.general.ldap_attrs:
    dn: "{{ ldap_db_dn }}"
    attributes:
      olcMirrorMode: "{{ ldap_mirror_mode }}"
    state: exact
  when: ldap_version == 2.4
  tags: ldap_setup_syncprov,ldap_config_syncprov

- name: Add indexes for replication
  community.general.ldap_attrs:
    dn: "{{ ldap_db_dn }}"
    attributes:
      olcDbIndex: "{{ idx }}"
  loop:
    - "entryCSN eq"
    - "entryUUID eq"
  loop_control:
    loop_var: idx
  tags: ldap_setup_syncprov,ldap_config_syncprov
