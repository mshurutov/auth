---
- name: Add Kerberos Container
  community.general.ldap_entry:
    dn: "{{ ldap_krb_pack }}"
    objectClass:
    - "krbContainer"
  tags: ldap_setup_tree,ldap_setup_krb,ldap_krb_add
- name: Get max number of ACL
  ansible.builtin.shell: ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b olcDatabase={{ '{' }}{{ ldap_db_data_number }}{{ '}' }}{{ ldap_config_db_type }},cn=config | awk '/^olcAccess/ {a=gensub(/.*\{([0-9]+)\}.*/,"\\1","g",$0); if ( a > b ) b=a; } END { print b }'
  register: acl_max_number
  check_mode: no
  tags: ldap_setup_tree,ldap_setup_krb,ldap_krb_acl
- name: Check if ACL exists
  ansible.builtin.shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b olcDatabase={{ '{' }}{{ ldap_db_data_number }}{{ '}' }}{{ ldap_config_db_type }},cn=config | awk '/to dn.subtree=\"cn=kerberos,ou=baseservices,dc=mshurutov,dc=home\"/ {print}'"
  register: acl_exist
  check_mode: no
  tags: ldap_setup_tree,ldap_setup_krb,ldap_krb_acl
- name: Add access rights to Kerberos container
  community.general.ldap_attrs:
    dn: "{{ ldap_db_dn }}"
    attributes:
      olcAccess: "{{ '{' }}{{ acl_max_number.stdout | int + 1 }}{{ '}' }}to dn.subtree=\"{{ ldap_krb_pack }}\" by group.exact=\"{{ ldap_ops_group }}\" manage by group.exact=\"{{ ldap_krb_group }}\" manage by * none"
  when: acl_exist.stdout == ""
  tags: ldap_setup_tree,ldap_setup_krb,ldap_krb_acl
